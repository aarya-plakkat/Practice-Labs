connecting the ec2 with java 

import java.sql.*;
public class JdbcCrudDemo {
 // Database connection parameters
 static final String JDBC_URL = "jdbc:mysql://localhost:3306/your_database";
 static final String JDBC_USER = "your_username";
 static final String JDBC_PASS = "your_password";
 public static void main(String[] args) {
 try {
 // 1. Load the JDBC driver (optional for newer drivers)
 Class.forName("com.mysql.cj.jdbc.Driver");
 // 2. Establish the connection
 Connection conn = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASS);
 // 3. CREATE: Insert a new employee
 String insertSql = "INSERT INTO employees (name, email, country, salary) VALUES (?, ?, ?, ?)";
 PreparedStatement insertStmt = conn.prepareStatement(insertSql);
 insertStmt.setString(1, "Alice");
 insertStmt.setString(2, "alice@example.com");
 insertStmt.setString(3, "USA");
 insertStmt.setDouble(4, 50000);
 insertStmt.executeUpdate();
 System.out.println("Inserted new employee.");
 // 4. READ: Retrieve all employees
 String selectSql = "SELECT * FROM employees";
 Statement selectStmt = conn.createStatement();
 ResultSet rs = selectStmt.executeQuery(selectSql);
 System.out.println("Employee List:");
 while (rs.next()) {
 System.out.println(
 rs.getInt("id") + ", " +
 rs.getString("name") + ", " +
 rs.getString("email"
) + ", " +
 rs.getString("country") + ", " +
 rs.getDouble("salary")
 );
 }
// 5. UPDATE: Update employee's salary
 String updateSql = "UPDATE employees SET salary = ? WHERE name = ?";
 PreparedStatement updateStmt = conn.prepareStatement(updateSql);
 updateStmt.setDouble(1, 60000);
 updateStmt.setString(2, "Alice");
 updateStmt.executeUpdate();
 System.out.println("Updated salary for Alice.");
 // 6. DELETE: Delete employee by name
 String deleteSql = "DELETE FROM employees WHERE name = ?";
 PreparedStatement deleteStmt = conn.prepareStatement(deleteSql);
 deleteStmt.setString(1, "Alice");
 deleteStmt.executeUpdate();
 System.out.println("Deleted employee Alice.");
 // 7. Close resources
 deleteStmt.close();
 updateStmt.close();
 rs.close();
 selectStmt.close();
 insertStmt.close();
 conn.close();
 } catch (Exception e) {
 e.printStackTrace();
 }
 }
}

scp -i jdk_path on local machine EC2 endpoint:/usr/lib/jvm
Connect to EC2 instance again
Unzip the uploaded jdk file 
usr/lib/jdk# tar zxvf file name 
#sudo nano /etc/environment 
 Edit the java HOME
Update the java settings

////////////////////////////////////////////////////////////////////////
connecting ec2 through the terminal

sudo apt update
sudo apt install apache2 -y        # if not installed
sudo systemctl start apache2
sudo systemctl enable apache2      # to start on boot
sudo systemctl status apache2      # optional: check status


In EC2 terminal execute the following commands
#Sudo apt-get update
# sudo apt-get install httpd
# mkdir temp
# cd temp
Goto https://getbootstrap.com/docs/5.1/examples/ on your desktop 
Right click on download examples and copy link
#temp> wget https://github.com/twbs/bootstrap/releases/download/v5.1.3/bootstrap-5.1.3-
examples.zip
#unzip complex.zip // the .zip file downloaded 
#temp>cd complex // move into the unzipped folder
#complex/ mv * /var/www/html
Goto to AWS login → EC2 instance → click on the ID→ security→ Edit Inbound rules→ Add rule 
→ Add http→ Access from anywhere → https → Access from any where → SSH → Save rule

On the EC2 terminal 
#systemctl enable httpd
# systenctl start httpd 
#systemctl status httpd
Goto AWS console copy the public IP and paste on the browser


cd /var/www/html

//////////////////////////////////////////////////////////////////

IAM

 sample-user 
butter136[]
 butter123[]


RDS

 admin 
butter136
 database-1

////////////////////////////////////////////////////////////


connect ec2 to rds and access the table using php code

 EC2 terminal $ sudo apt-get update -y
$ sudo apt-get install apache2
$ sudo systemctl restart apache2
$ sudo apt-get install mysql-client
$ mysql –version 
$ mysql -h <paste RDS endpoint> -u <your username> -p
Password:
mysql> SHOW DATABASES; and other commands
mysql> exit
$ cd /var/www/html/ ( Create index.html file and PhP code to crate and access 
databases)
Goto AWS consol → EC2 → copy public IP
Goto browser → http://EC2 IP
OR
RDS → Databases → Select the Database created→Actions→Set up EC2 
connection → follow the same procedure as above to launch EC2 instance
In the terminal of EC2 instance 
# cd /var/www/html
Create a file db.inc.php
/var/www/html # vi db.inc.php